{
  "version": 3,
  "sources": ["../../../node_modules/classnames/index.js", "browser-route-module:/Users/maximshirshin/src/github.com/maxshirshin/h2o-test/app/routes/ab-testing.tsx?browser", "../../../app/routes/ab-testing.tsx"],
  "sourcesContent": ["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n", "export { default, meta } from \"/Users/maximshirshin/src/github.com/maxshirshin/h2o-test/app/routes/ab-testing.tsx\";", "import type { ActionFunction, LoaderFunction, MetaFunction } from \"remix\";\nimport { json, Form, useLoaderData } from \"remix\";\nimport cn from \"classnames\";\n\nimport { unencryptedSession } from \"../sessions.server\";\n\nlet SESSION_KEY = \"ab-testing-bucket\";\n\nimport defaultImage from \"../images/default.jpg\";\nimport aImage from \"../images/a.jpg\";\nimport bImage from \"../images/b.jpg\";\n\nexport let meta: MetaFunction = () => {\n  return {\n    title: \"A/B Testing | Remix Cloudflare Demo\",\n    description: \"Demo utilizing cookies to run A/B tests.\",\n  };\n};\n\nexport let action: ActionFunction = async ({ request }) => {\n  let session = await unencryptedSession.getSession(\n    request.headers.get(\"Cookie\")\n  );\n\n  let formData = new URLSearchParams(await request.text());\n  let bucket = formData.get(\"bucket\");\n  session.set(SESSION_KEY, bucket);\n\n  return json(null, {\n    headers: {\n      \"Set-Cookie\": await unencryptedSession.commitSession(session),\n    },\n  });\n};\n\nexport let loader: LoaderFunction = async ({ request }) => {\n  let session = await unencryptedSession.getSession(\n    request.headers.get(\"Cookie\")\n  );\n\n  let bucket = session.get(SESSION_KEY);\n  if (typeof bucket !== \"string\") {\n    bucket = Math.random() > 0.5 ? \"a\" : \"b\";\n  }\n\n  session.set(SESSION_KEY, bucket);\n\n  return json(\n    { bucket },\n    {\n      headers: {\n        \"Set-Cookie\": await unencryptedSession.commitSession(session),\n      },\n    }\n  );\n};\n\nexport default function AbTesting() {\n  let { bucket } = useLoaderData();\n\n  return (\n    <main className=\"container mx-auto prose px-4 py-8\">\n      <h1>AB testing with buckets</h1>\n      <p>\n        In this demo we use cookies to assign a bucket with the variant to show.\n        When you first visited this page you were randomly assigned a bucket.\n      </p>\n      <p>\n        Click one of the buttons below to assign the bucket you are in. Even\n        after re-loading the page you will remain in the assigned bucket.\n      </p>\n\n      <p>Bucket: {bucket ? bucket : \"none\"}</p>\n\n      <div>\n        <Form method=\"post\" className=\"inline-block\" replace>\n          <input type=\"hidden\" name=\"bucket\" value=\"\" />\n          <button type=\"submit\" className={cn(\"btn\", !bucket && \"btn-active\")}>\n            Remove Bucket\n          </button>\n        </Form>{\" \"}\n        <Form method=\"post\" className=\"inline-block\" replace>\n          <input type=\"hidden\" name=\"bucket\" value=\"a\" />\n          <button\n            type=\"submit\"\n            className={cn(\"btn\", bucket === \"a\" && \"btn-active\")}\n          >\n            Bucket A\n          </button>\n        </Form>{\" \"}\n        <Form method=\"post\" className=\"inline-block\" replace>\n          <input type=\"hidden\" name=\"bucket\" value=\"b\" />\n          <button\n            type=\"submit\"\n            className={cn(\"btn\", bucket === \"b\" && \"btn-active\")}\n          >\n            Bucket B\n          </button>\n        </Form>\n      </div>\n\n      <img\n        alt={`${bucket || \"default\"} bucket image`}\n        height={934}\n        width={700}\n        src={(() => {\n          switch (bucket) {\n            case \"a\":\n              return aImage;\n            case \"b\":\n              return bImage;\n            default:\n              return defaultImage;\n          }\n        })()}\n      />\n    </main>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;AAAA;AAOA,IAAC,YAAY;AACZ;AAEA,UAAI,SAAS,GAAG;AAEhB,4BAAsB;AACrB,YAAI,UAAU;AAEd,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAC1C,cAAI,MAAM,UAAU;AACpB,cAAI,CAAC;AAAK;AAEV,cAAI,UAAU,OAAO;AAErB,cAAI,YAAY,YAAY,YAAY,UAAU;AACjD,oBAAQ,KAAK;AAAA,qBACH,MAAM,QAAQ,MAAM;AAC9B,gBAAI,IAAI,QAAQ;AACf,kBAAI,QAAQ,WAAW,MAAM,MAAM;AACnC,kBAAI,OAAO;AACV,wBAAQ,KAAK;AAAA;AAAA;AAAA,qBAGL,YAAY,UAAU;AAChC,gBAAI,IAAI,aAAa,OAAO,UAAU,UAAU;AAC/C,uBAAS,OAAO,KAAK;AACpB,oBAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM;AACtC,0BAAQ,KAAK;AAAA;AAAA;AAAA,mBAGT;AACN,sBAAQ,KAAK,IAAI;AAAA;AAAA;AAAA;AAKpB,eAAO,QAAQ,KAAK;AAAA;AAGrB,UAAI,OAAO,WAAW,eAAe,OAAO,SAAS;AACpD,mBAAW,UAAU;AACrB,eAAO,UAAU;AAAA,iBACP,OAAO,WAAW,cAAc,OAAO,OAAO,QAAQ,YAAY,OAAO,KAAK;AAExF,eAAO,cAAc,IAAI,WAAY;AACpC,iBAAO;AAAA;AAAA,aAEF;AACN,eAAO,aAAa;AAAA;AAAA;AAAA;AAAA;;;ACvDtB;;;ACAA;AAEA,wBAAe;AAEf,sBAAmC;;;;;;;;;;;;AAQ5B,IAAI,OAAqB,MAAM;AACpC,SAAO;AAAA,IACL,OAAO;AAAA,IACP,aAAa;AAAA;AAAA;AA0CF,qBAAqB;AAClC,MAAI,EAAE,WAAW;AAEjB,SACE,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,MAAD,MAAI,4BACJ,oCAAC,KAAD,MAAG,mJAIH,oCAAC,KAAD,MAAG,2IAKH,oCAAC,KAAD,MAAG,YAAS,SAAS,SAAS,SAE9B,oCAAC,OAAD,MACE,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,IAAe,SAAO;AAAA,KAClD,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAS,OAAM;AAAA,MACzC,oCAAC,UAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,WAAW,+BAAG,OAAO,CAAC,UAAU;AAAA,KAAe,mBAG/D,KACR,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,IAAe,SAAO;AAAA,KAClD,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAS,OAAM;AAAA,MACzC,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAW,+BAAG,OAAO,WAAW,OAAO;AAAA,KACxC,cAGK,KACR,oCAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAO,WAAU;AAAA,IAAe,SAAO;AAAA,KAClD,oCAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAS,OAAM;AAAA,MACzC,oCAAC,UAAD;AAAA,IACE,MAAK;AAAA,IACL,WAAW,+BAAG,OAAO,WAAW,OAAO;AAAA,KACxC,eAML,oCAAC,OAAD;AAAA,IACE,KAAK,GAAG,UAAU;AAAA,IAClB,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,KAAM,OAAM;AACV,cAAQ;AAAA,aACD;AACH,iBAAO;AAAA,aACJ;AACH,iBAAO;AAAA;AAEP,iBAAO;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
