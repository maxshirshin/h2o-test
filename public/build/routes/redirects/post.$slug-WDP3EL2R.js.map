{
  "version": 3,
  "sources": ["browser-route-module:/Users/maximshirshin/src/github.com/maxshirshin/h2o-test/app/routes/redirects/post.$slug.tsx?browser", "../../../../app/routes/redirects/post.$slug.tsx"],
  "sourcesContent": ["export { default, meta } from \"/Users/maximshirshin/src/github.com/maxshirshin/h2o-test/app/routes/redirects/post.$slug.tsx\";", "import { Fragment } from \"react\";\nimport type { LoaderFunction, MetaFunction } from \"remix\";\nimport { json, Link, useLoaderData } from \"remix\";\n\nexport let meta: MetaFunction = ({ params }) => {\n  return {\n    title: `Post ${params.slug} | Remix Cloudflare Demo`,\n    description: \"Demo Cloudflare KV store to do redirects at the edge.\",\n  };\n};\n\nfunction randomPost(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport let loader: LoaderFunction = ({ params, request }) => {\n  let url = new URL(request.url);\n\n  let extraRedirects = [randomPost(1, 500), randomPost(500, 1000)];\n\n  return json({\n    extraRedirects,\n    latency: url.searchParams.get(\"l\"),\n    slug: params.slug,\n  });\n};\n\nexport default function Post() {\n  let { extraRedirects, latency, slug } = useLoaderData();\n\n  return (\n    <main className=\"container mx-auto prose px-4 py-8\">\n      <h1>Post {slug}</h1>\n      {typeof latency === \"string\" ? <p>latency: {latency}ms</p> : null}\n      <p>\n        <Link prefetch=\"intent\" to=\"/redirects\">\n          Edge Redirects\n        </Link>\n        {extraRedirects.map((to: number) => (\n          <Fragment key={to}>\n            {\" \"}\n            |{\" \"}\n            <Link prefetch=\"intent\" to={`/redirects/${to}`}>\n              /redirects/{to}\n            </Link>\n          </Fragment>\n        ))}\n      </p>\n    </main>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;AAAA;;;ACAA;AAAA,mBAAyB;AAIlB,IAAI,OAAqB,CAAC,EAAE,aAAa;AAC9C,SAAO;AAAA,IACL,OAAO,QAAQ,OAAO;AAAA,IACtB,aAAa;AAAA;AAAA;AAsBF,gBAAgB;AAC7B,MAAI,EAAE,gBAAgB,SAAS,SAAS;AAExC,SACE,oCAAC,QAAD;AAAA,IAAM,WAAU;AAAA,KACd,oCAAC,MAAD,MAAI,SAAM,OACT,OAAO,YAAY,WAAW,oCAAC,KAAD,MAAG,aAAU,SAAQ,QAAS,MAC7D,oCAAC,KAAD,MACE,oCAAC,MAAD;AAAA,IAAM,UAAS;AAAA,IAAS,IAAG;AAAA,KAAa,mBAGvC,eAAe,IAAI,CAAC,OACnB,oCAAC,uBAAD;AAAA,IAAU,KAAK;AAAA,KACZ,KAAI,KACH,KACF,oCAAC,MAAD;AAAA,IAAM,UAAS;AAAA,IAAS,IAAI,cAAc;AAAA,KAAM,eAClC;AAAA;",
  "names": []
}
